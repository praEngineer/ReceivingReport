<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>cms</category>
        <client_script><![CDATA[// Specify the desired rr_year and rr_month values
var defDate = new Date();
defDate.setMonth(defDate.getMonth()-1);
setDesiredRRYear(defDate.getFullYear()); // Replace with your desired year
setDesiredRRMonth(defDate.getMonth()+1);   // Replace with your desired month, a digit from 1 to 12
var htmlButtonEnabled = '<button id="printButton">Print Page</button>';
var htmlButtonDisabled = '<button id="printButton" disabled>Print Page</button>';

var html = ''; // initialize id="render_table"

var loadedImages = 0;
document.getElementById('render_buttonPrint').innerHTML = htmlButtonDisabled;
// Function to check if all images are loaded
function checkImagesLoaded() {
	loadedImages++;
	// alert("loaded image #" + loadedImages);
	if (loadedImages > 0) { // Adjust the count if you have more images
		// alert('All images are loaded, enable the print button');
		document.getElementById('render_buttonPrint').innerHTML = htmlButtonEnabled;
	}
}

$j('#broswerTopImageImg').on('load', function() {
	// alert('Top image loaded.');
	// Pause for half a second (500 milliseconds)
	setTimeout(function () { checkImagesLoaded();}, 500);
});

$j('#browserBottomImageImg').on('load', function() {
	// alert('Bottom image loaded.');
	setTimeout(function () { checkImagesLoaded();}, 500);
});

refreshTbl();

// Bind click event to the print button
$j('#render_buttonPrint').click(function() {
	window.print();
/*
if (loadedImages > 1) {
		window.print();
	} else {
		alert('Images are still loading. Please wait and try again.');
	}
*/
});

function getHtmlTop() {
var htmlTop = '';

htmlTop += '<tr><th>';
htmlTop = '<table id="staticHtml" class="avoid-break-after avoid-break"  cellspacing="0"><tbody><tr style="height:11pt"><td style="width:50pt;border-top-style:solid;border-top-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s15" style="padding-left: 5pt;padding-right: 5pt;text-indent: 10pt;text-align: left;">DATE PREPARED</p></td><td style="width:40pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s15" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;line-height: 8pt;text-align: left;">RECEIVED</p></td><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s16" style="padding-top: 2pt;padding-left: 1pt;text-indent: 0pt;line-height: 8pt;text-align: left;">BY</p></td><td style="width:172pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:30pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:3pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:23pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:5pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:61pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s17" style="padding-left: 2pt;padding-right: 1pt;text-indent: 5pt;text-align: left;">OMPA OR<br/><br/>CONTRACT NO.</p></td><td style="width:62pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s19" style="text-indent: 0pt;line-height: 8pt;text-align: left;">ORDER NO.</p></td><td style="width:35pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s19" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SHIPPING</p><p class="s19" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">INSTR NO.</p></td><td style="width:34pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt" rowspan="2"><p class="s19" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">RECEIVING</p><p class="s19" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">REPORT NO.</p></td></tr><tr style="height:10pt"><td style="width:42pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt;background-color:#D3D3D3;" colspan="2"><p class="s24" style="padding-left: 2pt;text-indent: 0pt;text-align: left;background-color:#D3D3D3;">STOREHOUSE</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="7"><p class="s15" style="padding-left: 3pt;text-indent: 0pt;line-height: 8pt;text-align: left;">AGENCY AND UNIT</p></td></tr><tr style="height:26pt"><td style="width:50pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:42pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt;background-color:#D3D3D3" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:290pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="7"><p class="s25" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">ADDRESS<span class="s26">DSNY IT 357 Pearl St 19th fl</span></p></td><td style="width:61pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s27" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Credit Card</p></td><td style="width:62pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:35pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td><td style="width:34pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/><br/></p></td></tr><tr style="height:55pt"><td style="width:250pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="4"><p class="s15" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">RECEIVED FROM: NAME OF SELLER (VENDOR)</p><p><div id="nameOfSeller"></div></p></td><td style="width:78pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="4"><p class="s15" style="padding-left: 11pt;text-indent: 0pt;text-align: left;">BILL OF LADING /<br/><br/>DEL. TICKET NO.</p></td><td style="width:246pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt" colspan="6"><table style="width:100%"><tbody><tr><td valign="top" colspan="2" style="width:100%"><span class="s15" style="padding-left: 11pt;text-indent: 0pt;text-align: left;">CHECK ONE:</span></td></tr><tr><td colspan="1" style="width:10%"><span class="s32" style="padding-top: 3pt;padding-left: 2pt;padding-right: 1pt;line-height: 39%;text-align: top;"><span class="s31">□</span></span></td><td colspan="1" style="width:90%;text-align: left;"><span class="s32" style="padding-left: 2pt;padding-right: 1pt;text-align: left;"><span style=" color: #131313;">THIS IS A PARTIAL DELIVERY</span><br/><br/><span style=" color: #4F4F4F;">(MORE DELIVERIS DUE ON SAME ORDER)</span></span></td></tr><tr><td valign="top" colspan="1" style="width:10%"><span class="s32" style="padding-left: 2pt;padding-right: 1pt;line-height: 39%;text-align: left;"><span class="s31">□</span></span></td><td valign="top" colspan="1" style="width:90%;text-align: left;"><span class="s32" style="padding-left: 2pt;padding-right: 1pt;text-align: left;"><span style=" color: #131313;">FINAL DELIVERY</span><br/><br/></span></td></tr></tbody></table></tr></tbody></table>';

	// htmlTop += '</th></tr>';

	return htmlTop;
}

function getHtmlDynamicTableHeader() {

	var lclhtml = '<tr><th class="rrcolall rrcol01">ITEM NO</th><th class="rrcolall rrcol02a">STOREHOUSE<br/>COMMODITY<br/>CODE</th><th class="rrcolall rrcol02b" >Description</th><th class="rrcolall rrcol03" >Quantity</th><th class="rrcolall rrcol04 text-center">Unit</th><th class="rrcolall rrcol05 text-center" >Unit<br/>Price</th><th class="rrcolall rrcol06">Quantity</th><th class="rrcolall rrcol07">Unit</th><th class="rrcolall rrcol08">Unit<br/>Price</th><th class="rrcolall rrcol09header">Total Cost</th></tr>';

	return lclhtml;
}

function getVendorsJSON(response) {
	var answer = "";
	var step = 1.19;

	try {
		answer = response.responseXML.querySelector('xml').getAttribute('answer');
		// above line retrieves
		// the response attribute for the 'getRecords' function you defined in your server script.
		step = 29;
		if (answer) {
			step = 39;
			// Process the response data (assuming the response is a JSON array)
			var data = "";
			try {
				data = JSON.parse(answer);
				//alert(step + '. data is: ' + data);
			}
			catch (error) {
				alert(step + '. data catch: ' + error.toString());
			}
			step = 49;
			// Iterate through the results and add rows to the HTML table
			var currRow=1;
			var formattedRow = '';
			document.getElementById('render_vendorSelect').innerHTML = '';
			var selHTML = '<label for="vendorSelect">Select Vendor:</label>';
			selHTML += '<select id="vendorSelect" onChange="chgVendor()">';
			selHTML += '<option value=""></option>';
			var lclDesiredVendor = getDesiredRRVendor();
			data.forEach(function(record) {
				formattedRow = currRow < 10 ? 'Row0' + currRow : 'Row' + currRow;
				// alert(formattedRow);
				step = 59.07;
				if (lclDesiredVendor !== record.vendor){
					selHTML += '<option value="' + record.vendor + '"';				}
				else {
					selHTML += '<option selected value="' + record.vendor + '"';					
				}
				selHTML += '>' + record.vendor + '</option>';
				currRow += 1;
			});
			
			// Close the HTML table
			selHTML += '</select></div>';
			step = 59;
			// alert(step + '. ');
		} else {
			step = 69;
			selHTML = step + '. vendor answer is empty';
		}		
		document.getElementById('render_vendorSelect').innerHTML = selHTML;
		step = 79;
	}
	catch (error){
		alert('from client catch: ' + error.toString());
		// html = step + '. from client catch: ' + error.toString() + '<br />' + answer;
	}

}


function getRecordsJSON(response) {
	var answer = "";
	step = 1.1;
	// alert('start getRecordsJSON');
	try {
		answer = response.responseXML.querySelector('xml').getAttribute('answer');
		// above line retrieves
		// the response attribute for the 'getRecords' function you defined in your server script.
		step = 2;
		if (answer) {
			step = 3;
			// Process the response data (assuming the response is a JSON array)
			var data = "";
			try {
				data = JSON.parse(answer);
				//alert(step + '. data is: ' + data);
			}
			catch (error) {
				alert(step + '. data catch: ' + error.toString());
			}
			step = 4;
			// Iterate through the results and add rows to the HTML table
			var currRow=1;
			var formattedRow = '';
			var currRowEmpty = 0;
			var lastRowTotalCost = 0;
			var rowsOnPage = 17;
			// var rowsOnPrintedPage = 15;
			html = '';
			data.forEach(function(record) {
				var recVendName = ''; //'vendor not entered for ' + record.number;
				
				if(record.vendor !== null){
					recVendName = record.vendor.toString();
					if(typeof record.vendor === 'string' && record.vendor.trim() !== ''){
						recVendName = record.vendor;
					}					
				}

				var lclSysId = 'initialized lclSysId';
				// alert('record.sysid is ' + record.sysid);
				if(record.sysid !== null){
					if(typeof record.sysid === 'string' && record.sysid.trim() !== ''){
						lclSysId = record.sysid;
					}
				}
				else {
					lclSysId =  'sysid not provided';
				}
				lclSysId = lclSysId.trim();
				//alert('lclSysId is ' + lclSysId.length + ' with a value of ' + lclSysId);
				formattedRow = currRow < 10 ? 'Row0' + currRow : 'Row' + currRow;
				var unitEach = record.quantity > 1 ? 'Each' : '';
				var unitPrice = '';
				if (record.unit_price !== null) {
					unitPrice = parseFloat(record.unit_price).toFixed(2);
				}
				html += '<tr><td class="rrcolall rrcol01"><div id="' + formattedRow +'Cell01">' + record.quantity + '</div></td><td class="rrcolall rrcol02" colspan="2"><div id="' + formattedRow +'Cell02"><div><a href="https://nycdsdev1.service-now.com/nav_to.do?uri=x_dosny_bit_procur_bit_procurement_credit_card_line_items.do?sys_id=' + lclSysId + '">' + record.number + '</a>' + '&nbsp;' + recVendName + '<br/>' + record.subject + '</div></td><td class="rrcolall rrcol03"><div id="' + formattedRow +'Cell03">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol04"><div id="' + formattedRow +'Cell04">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol05"><div id="' + formattedRow +'Cell05">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol06"><div id="' + formattedRow +'Cell06">' +  record.quantity + '</div></td><td class="rrcolall rrcol07"><div id="' + formattedRow +'Cell07">' + unitEach + '</div></td><td class="rrcolall rrcol08"><div id="' + formattedRow +'Cell08">' +  unitPrice + '</div></td><td class="rrcolall rrcol09"><div id="' + formattedRow +'Cell09">' + (record.quantity * record.unit_price).toFixed(2) + '</div></td></tr>';			
				currRow += 1;
				lastRowTotalCost += (record.quantity * record.unit_price);
				/* if((currRow % rowsOnPage == 0 && currRow > rowsOnPage) || currRow % rowsOnPrintedPage ==0){
					add a page break for printing 
					html += '<tr id="pgbreak"><td colspan="10"><div> -- Page Break after ' + currRow + ' -- </div></td></tr>';
					
					'<tr><td><div class="pgbreak"><img style="visibility: visible; display: block;" id="render_footer'+ currRow +'_jpg" src="https://nycdsdev1.service-now.com/537cf5a71b51fd106c1036ef034bcbcf.iix" class="resize-image bottom-image"></div></td></tr>';
					
				}*/
			});
			if(currRow % rowsOnPage !== 0){
				//alert('make empty rows');
				var testAgainstThis = 0;
				if( currRow < rowsOnPage) {
					testAgainstThis = rowsOnPage -1;
				}
				else {
					testAgainstThis = currRow + (currRow % rowsOnPage) - 1;
				}
				// if currRow is 27, the value of the expression currRow + 10 - (currRow % 10) is 30.
				// alert('currRow is ' + currRow + ' testAgainstThis is ' + testAgainstThis);
				for (currRowEmpty = currRow; currRowEmpty <= testAgainstThis; currRowEmpty++) {
				formattedRow = currRowEmpty < 10 ? 'Row0' + currRowEmpty : 'Row' + currRowEmpty;
				html += '<tr><td class="rrcolall rrcol01"><div id="' + formattedRow +'Cell01">' + '&nbsp;' + '</div></td><td class="rrcolall rrcol02" colspan="2" ><div id="' + formattedRow +'Cell02">' + '&nbsp;' + '&nbsp;' + '&nbsp;' + '<br/>' + '&nbsp;' + '</div></td><td class="rrcolall rrcol03"><div id="' + formattedRow +'Cell03">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol04"><div id="' + formattedRow +'Cell04">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol05"><div id="' + formattedRow +'Cell05">' +  '&nbsp;' + '</div><td class="rrcolall rrcol06"><div id="' + formattedRow +'Cell06">' + '&nbsp;' + '</div></td><td class="rrcolall rrcol07"><div id="' + formattedRow +'Cell07">' +  '&nbsp;' + '</div><td class="rrcolall rrcol08"><div id="' + formattedRow +'Cell08">' + '&nbsp;' + '</div></td><td class="rrcolall rrcol09"><div id="' + formattedRow +'Cell09">' + '&nbsp;' + '</div></td></tr>';
				} /* end of for */
			}
// Last row with TOTAL
			currRowEmpty = currRowEmpty == 0 ? currRow+1 : currRowEmpty +=1;
			formattedRow = currRowEmpty < 10 ? 'Row0' + currRowEmpty : 'Row' + currRowEmpty;
			html +=  '<tr sytle="page-break-after: avoid"><td class="rrcolall rrcol01"><div id="' + formattedRow +'Cell01">' + '&nbsp;' + '</div></td><td class="rrcolall rrcol02" colspan="2"><div id="' + formattedRow +'Cell02">' + 'TOTAL' + '<br/>' + '&nbsp;' + '</div></td><td class="rrcolall rrcol03"><div id="' + formattedRow +'Cell03">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol04"><div id="' + formattedRow +'Cell04">' +  '&nbsp;' + '</div></td><td class="rrcolall rrcol05"><div id="' + formattedRow +'Cell05">' +  '&nbsp;' + '</div><td class="rrcolall rrcol06"><div id="' + formattedRow +'Cell06">' + '&nbsp;' + '</div></td><td class="rrcolall rrcol07"><div id="' + formattedRow +'Cell07">' +  '&nbsp;' + '</div><td class="rrcolall rrcol08"><div id="' + formattedRow +'Cell08">' + '&nbsp;' + '</div></td><td class="rrcolall rrcol09"><div id="' + formattedRow +'Cell09">' +  lastRowTotalCost.toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + '</div></td></tr>';		
			
		} else {
			step = 6;
			alert(step + '. answer catch: ' + error.toString());
		}		
		// document.getElementById('render_table').innerHTML = html;
		renderTheTable(html, 'getRecordsJSON');
		var currNameOfSeller = getDesiredRRVendor();
		if (currNameOfSeller !== null) {
			if(typeof currNameOfSeller === 'string' && currNameOfSeller.trim() !== ''){
				document.getElementById('nameOfSeller').innerHTML = '<div>' + currNameOfSeller + '</div>';	
			}
		}

		step = 7;
	}
	catch (error){
		alert('from client catch: ' + error.toString());
		// html = step + '. from client catch: ' + error.toString() + '<br />' + answer;
	}

}

function renderYearDropDown(defYear) {
	try {
		var anotherOption = '';
		step = 8;
		var currentYear = new Date().getFullYear();
		//alert(step + '. currentYear is ' + currentYear);
		step = 9;
		var yearChoices = [currentYear - 2, currentYear - 1, currentYear, currentYear + 1, currentYear + 2];
		step = 10;
		// Populate year options
		var htmlSelectYear = ''
		+ '<label for="yearSelect">Select Year:</label>'
		+ '<select id="yearSelect" onChange="chgYear()">'
		+ '<option value=""></option>';
		step = 12;
		var htmlSelectClose = ''
		+'</select>';
		step = 13;
		// alert(step + '. htmlSelectYear is ' + htmlSelectYear);	

		var intCurrentlySelectedYear = parseInt(defYear);
		for (var i = 0; i < yearChoices.length; i++) {
			anotherOption = '<option ';
			if (yearChoices[i] === intCurrentlySelectedYear) {
				anotherOption = anotherOption + ' selected '; // Set the default year as selected
			}
			anotherOption = anotherOption + 'value="' + yearChoices[i] + '">';

			anotherOption = anotherOption +  yearChoices[i] + '</option>';

			htmlSelectYear = htmlSelectYear + anotherOption;
		}
		step = 14;
		htmlSelectYear = htmlSelectYear + htmlSelectClose;

		document.getElementById('render_yearSelect').innerHTML = '<div>' + htmlSelectYear + '</div>';
	}
	catch (error){
		document.getElementById('render_yearSelect').innerHTML = '<div>' + error.toString() + '</div>';
	}
}

function getMonthName(monthNumber) { // param expected to be between 0 and 11
    var months = [
        'January', 'February', 'March', 'April',
        'May', 'June', 'July', 'August',
        'September', 'October', 'November', 'December'
    ];
	var intMonthNumber = parseInt(monthNumber);
	var zeroBasedMonthNumber = intMonthNumber-1;
	// alert ('getMonthName('+ zeroBasedMonthNumber.toString() +') is ' + months[intMonthNumber-1]);
    return months[intMonthNumber-1]; // javascript arrays are zero-based
}

function renderMonthDropDown(defMonth) {
		step = 15;
		document.getElementById('render_monthSelect').innerHTML = '';
		step = 16.06;
		var selHTML = '<label for="monthSelect">Select Month:</label>';
		selHTML += '<select id="monthSelect" class="selectpicker" onChange="chgMonth()">';
		selHTML += '<option value=""></option>';
		step = 16.07;
		for (var month = 1; month <= 12; month++) {
			selHTML += '<option value="' + month + '"';
			if (month === defMonth) {
				selHTML += ' selected';
			}
			selHTML += '>' + getMonthName(month) + '</option>'; // month-1 is between 0 and 11
		}
		step = 16.08;
		selHTML += '</select>';
		// alert(step + '. selHTML is ' + selHTML);
		document.getElementById('render_monthSelect').innerHTML = '<div>' + selHTML + '</div>';
		step = 16.09;
}

function repeatString(str, num) {
    return num > 0 ? str.repeat(num) : '';
}


function renderTheVendorCombo(defVendor) {
    // Initialize a GlideAjax instance for making server calls
    var gaVendor = new GlideAjax('ReceivingReportAjaxCall'); // your GlideAjax script include class name

    gaVendor.addParam('sysparm_name', 'getVendorsThisMonth');
    // Replace with your (e.g., getRecords) GlideAjax function name within class declaration
    var lclYearVendor = getDesiredRRYear();
    var lclMonthVendor = getDesiredRRMonth();
    // passing results of a function versus a pointer to the function
    gaVendor.addParam('sysparm_rr_year', lclYearVendor);
    gaVendor.addParam('sysparm_rr_month', lclMonthVendor);

    // alert('get vendors for ' + lclYearVendor + ' ' + getMonthName(lclMonthVendor));
    gaVendor.getXML(getVendorsJSON);

    step = 663;
}


function refreshTbl() {
		// alert('start refreshTbl');
// Query the x_dosny_bit_procur_bit_procurement_credit_card_line_items table
// Initialize a GlideAjax instance for making server calls
		var ga = new GlideAjax('ReceivingReportAjaxCall'); // your GlideAjax script include class name

		ga.addParam('sysparm_name', 'getRecords'); 
			// Replace with your (e.g., getRecords) GlideAjax function name within class declaration
		var lclYear = getDesiredRRYear();
		var lclMonth = getDesiredRRMonth();
		var lclVendor = getDesiredRRVendor();
	// passing results of a function versus a pointer to the function
		ga.addParam('sysparm_rr_year', lclYear);
		ga.addParam('sysparm_rr_month', lclMonth);
		if(lclVendor !== null) {
			if (typeof lclVendor === 'string' && lclVendor.trim() !== '') {
				ga.addParam('sysparm_rr_vendor', lclVendor);				
			}
		}
		// document.getElementById('render_header_second').innerHTML = getHtmlTop() ;
		// document.getElementById('render_header_third').innerHTML = getHtmlBottom() ;
		
		step = 71;
		html = ''; //frame;

		ga.getXML(getRecordsJSON);	// retrieves the credit card charges
		step = 73;
	
		// renderTheTable(html, 'refreshTbl');
		// step = 74;

		renderYearDropDown(lclYear);
		step = 75;
		
		renderMonthDropDown(lclMonth);
		step = 76;

		renderTheVendorCombo(lclVendor);
		step = 76.5;
	
		if(lclVendor !== null && lclVendor !== undefined) {
			step = 76.7;
			document.getElementById('rrTitle').innerHTML = 'Receiving Report Month (' + lclMonth + ') and Year (' + lclYear + ') Choices for ' + lclVendor;			
		}
		else {
			step = 76.8;
			document.getElementById('rrTitle').innerHTML = 'Receiving Report Month (' + lclMonth + ') and Year (' + lclYear + ') Choices';			
		}

		step = 77;

	// alert('refreshTbl made it to step ' + step);	
}

function chgYear () {
		// alert('chgYear event');
		var ctrlYear = document.getElementById('yearSelect').value.toString();
		var ctrlMonth = document.getElementById('monthSelect').value;
		setDesiredRRMonth(ctrlMonth);
		setDesiredRRVendor('');
        setDesiredRRYear(ctrlYear);
		refreshTbl();
}

function chgMonth() {
		// alert('chgMonth event');
		var ctrlYear = document.getElementById('yearSelect').value.toString();
		var ctrlMonth = document.getElementById('monthSelect').value;
        setDesiredRRYear(ctrlYear);
		setDesiredRRVendor('');
		setDesiredRRMonth(ctrlMonth);
		refreshTbl();
    }

function chgVendor(){
		// alert('chgVendor fired');
		var ctrlVendor = document.getElementById('vendorSelect').value;
		var ctrlMonth = document.getElementById('monthSelect').value;
		var ctrlYear = document.getElementById('yearSelect').value.toString();
		//alert('ctrlYear is ' + ctrlYear + ' and ctrlMonth is ' + ctrlMonth + ' and vendor is ' + ctrlVendor);
		setDesiredRRYear(ctrlYear);
		setDesiredRRMonth(ctrlMonth);
        setDesiredRRVendor(ctrlVendor);
		refreshTbl();	
}

var desiredRRYear = '';
var desiredRRMonth = 0; // expected values between 1 and 12
var desiredRRVendor = '';

// Getter function for desiredRRYear
function getDesiredRRYear() {
    var lclYear = desiredRRYear;
    var lclDate = new Date();
    if (lclYear !== null) {
        if (typeof lclYear === 'string' && lclYear.trim() !== '') {
            return lclYear;
        } else {
            setDesiredRRYear(lclDate.getFullYear());
        }
    } else {
        setDesiredRRYear(lclDate.getFullYear());
    }
    return desiredRRYear;
}

// Setter function for desiredRRYear
function setDesiredRRYear(newYear) {
  desiredRRYear = newYear.toString();
}

// Getter function for desiredRRVendor
function getDesiredRRVendor() {
  return desiredRRVendor;
}

// Setter function for desiredRRVendor
function setDesiredRRVendor(newVendor) {
  desiredRRVendor = newVendor;
}

// Setter function for desiredRRMonth
function setDesiredRRMonth(newMonth) {
    step = 16.044;
    if (typeof newMonth === 'number') {
        // If newMonth is already a number, we can directly assign it,
        // but we'll ensure it's within the range 1 to 12.
        desiredRRMonth = Math.max(1, Math.min(12, newMonth));
    } else {
        // If newMonth is not a number, attempt to parse it as an integer.
        // Ensure the parsed value is within the range 1 to 12.
        desiredRRMonth = Math.max(1, Math.min(12, parseInt(newMonth, 10)));
    }
	// alert('newMonth: ' + newMonth + ' became desiredRRMonth: ' +  desiredRRMonth);
}

// Getter function for desiredRRMonth
function getDesiredRRMonth() {
	step = 16.041;
	var lclMonth = desiredRRMonth;
	// alert(step + '. lclMonth is ' + lclMonth);
	var lclDate = new Date();
	if (lclMonth !== null) {
		if (typeof lclMonth === 'number' && lclMonth > 0) {
			return lclMonth;
		} 
		else {
			step = 161.0422;
			lclDate.setMonth(lclDate.getMonth()-1);
			setDesiredRRYear(lclDate.getFullYear());
			step = 161.0423;
			lclMonth = lclDate.getMonth();
			step = 161.0424;
			// alert(step + '. lclMonth is ' + lclMonth);
			setDesiredRRMonth(lclMonth+1); // expected to be between 1 and 12
			step = 161.0425;	
		}
		return lclMonth;
	}
	else {
		step = 16.0421;
		step = 16.0422;
		lclDate.setMonth(lclDate.getMonth()-1);
		setDesiredRRYear(lclDate.getFullYear());
		step = 16.0423;
		lclMonth = lclDate.getMonth(); // between 0 and 11
		step = 16.0424;
		// alert(step + '. lclMonth is ' + lclMonth);
		setDesiredRRMonth(lclMonth+1); // expected to be between 1 and 12
		step = 16.0425;		
	}
	step = 16.043;
  //alert(step + '. getDesiredRRMonth is ' + desiredRRMonth);
  return lclMonth;
}

function renderTheTable(parmHTML, sentby){
	try {
		document.getElementById('render_staticHtml').innerHTML = getHtmlTop();
		document.getElementById('render_dynamicHeader').innerHTML = '<table><thead id="dynamichead">' + getHtmlDynamicTableHeader() + '</thead></table>'; 
		
		var dynamicHtml = '<tbody><tr><td><table id="dynamicHtml"><thead id="dynamichead">' + getHtmlDynamicTableHeader() + '</thead><tbody>' + parmHTML;
		var footerForBwsr = '<tfoot><tr><td colspan="10"><div><img id="bottomImageBwsr" src="https://nycdsdev1.service-now.com/537cf5a71b51fd106c1036ef034bcbcf.iix"/><div></td></tr></tfoot>';
		var endDynamicRows ='</tbody></table></td></tr></tbody>';

		var footerForPrt = '<tfoot><div><img id="bottomImagePrt" src="https://nycdsdev1.service-now.com/537cf5a71b51fd106c1036ef034bcbcf.iix"/></div></tfoot>';

		// staticHeader + dynamicHtml + footerForBwsr +endDynamicRows + footerForPrt + '</table>';
		html = '<table>';
		// html += '<thead>' + getHtmlTop() + '</thead>'; // includes thead tags
		html += '<tbody>';
			html += '<tr><td>';
				html += '<table id="dynamicHtml" >';
					// html += '<thead id="dynamichead">' + getHtmlDynamicTableHeader() + '</thead>';
					
					html += '<tbody style="overflow: auto !important;">';
						var htmlrow = '<tr><td class="rrcolall" style="overflow: auto !important;">';
						// html += '<tbody>' + repeatString('<tr><td class="rrcolall"><div>anything<br/></div></td></tr>',80) + '</body>'; 
							htmlrow += 'anything else';
						htmlrow += '</td></tr>';
						// html += repeatString(htmlrow,15);
						html += parmHTML;
					html += '</tbody>';
				html += '</table>';
			html += '</td></tr>';
		html += '</tbody>';
		// html += footerForBwsr; // '<tfoot><tr><td>any footer</td><tr></tfoot>';
		html += '</table>';
		// html += '</div></td></tr></tbody>'; 
		// html += footerForBwsr;  

		//'</tbody>' + footerForPrt;

		document.getElementById('render_table').innerHTML = html;

		/*
				<tfoot class="ttfoot">
				<img
					 style="visibility: visible; display: inline-block;"
					 id="render_footer_jpg"
					 src="https://nycdsdev1.service-now.com/537cf5a71b51fd106c1036ef034bcbcf.iix"
					 class="resize-image bottom-image"
					 />
				</tfoot>
*/
	} 
	catch (error) {
		document.getElementById('render_table').innerHTML = error.toString();
	}
}


]]></client_script>
        <description>Retrieve rows from x_dosny_bit_procur_bit_procurement_credit_card_line_items and present those in a nicely formatted HTML table. This script will use a specified rr_year and rr_month from the x_dosny_bit_procur_bit_procurement_receiving_report reference table.&#13;
&#13;
This version will show a continuous table in the browser.  It will page-break the dynamic table when there are more than what will fit on the first printed page.</description>
        <direct>false</direct>
        <endpoint>x_dosny_vendorrepo_ReceivingReportWithBootstrapV05.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Receiving Report</title>
    <style>
    p {
      color: #131313;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 7pt;
      margin: 0pt;
    }
	/* Always break before the element */
	.break-before {
		page-break-before: always;
		}
	/* Avoid page break before the element */
	.avoid-break {
		page-break-before: avoid;
		}
	/* Always break after the element */
	.break-after {
		page-break-after: always;
		}
	/* Avoid page break after the element */
	.avoid-break-after {
		page-break-after: avoid;
		}
    .s15 {
      color: #131313;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 7pt;
    }
	.s15a {
      color: #131313;
	  background-color: #D3D3D3;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 7pt;
    }
    .s16 {
      color: black;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 7pt;
    }
    .s17 {
      color: #262626;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 6pt;
    }
    .s19 {
      color: #A5A5A5;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 6pt;
    }
    .s24 {
      color: #131313;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 6pt;
    }
    .s25 {
      color: #131313;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 7pt;
      vertical-align: 4pt;
    }

    .s26 {
      color: black;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 12pt;
    }

    .s27 {
      color: black;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 10.5pt;
    }
    .s31 { /* check box */
      color: #131313;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 17pt;
      vertical-align: 12pt;
    }

    .s32 {
      color: #262626;
      font-family: Arial, sans-serif;
      font-style: normal;
      font-weight: normal;
      text-decoration: none;
      font-size: 6pt;
    }
	.inline-block {
		display: inline-block;
		margin-right: 10px; /* Add some spacing between them if needed */
		margin-top: 5px;
		margin-bottom: 5px;
	}		

	/* Define page size and margins */
    @media page {
        size: letter;
        margin: 20mm;
    }

	.rrcolall {
		border-top-style: solid; 
		border-top-width: 1pt; 
		border-left-style: solid; 
		border-left-width: 1pt; 
		border-bottom-style: solid; 
		border-bottom-width: 1pt; 
		border-right-style: solid; 
		border-right-width: 1pt;
		}
	.rrcol01 {
		text-align: center;
		min-width: 55pt;
		max-width: 55pt;	
		}
	.rrcol02 {
		word-wrap: break-word; /* Wrap content within cells if needed */
		text-align: left;
		min-width: 258pt;
		max-width: 258pt;
		overflow:hidden;
		max-height: 93pt;
		}
	.rrcol02a {
		background-color:#D3D3D3;
		text-align: center;
		min-width: 64pt;
		max-width: 64pt;
			}
	.rrcol02b {
		text-align: center;
		min-width: 194pt;
		max-width: 194pt;
			}			
	.rrcol03 {
		background-color:#D3D3D3;
		min-width: 38pt;
		max-width: 38pt;	
			}
	.rrcol04 {
		background-color:#D3D3D3;
		min-width: 23pt;
		max-width: 23pt;	
			}
	.rrcol05 {
		background-color:#D3D3D3;
		min-width: 40pt;
		max-width: 40pt;	
			}
	.rrcol06 {
		text-align: center;
		min-width: 41pt;
		max-width: 41pt;	
		}
	.rrcol07 {
		text-align: center;
		min-width: 22pt;
		max-width: 22pt;	
		}
	.rrcol08 {
		text-align: center;
		min-width: 42pt;
		max-width: 42pt;	
		}
	.rrcol09header {
		text-align: center;
		min-width: 77pt;
		max-width: 77pt;	
		}	
	.rrcol09 {
		text-align: right;
		min-width: 69pt;
		max-width: 69pt;	
		}				
	#tableContainerOuter {
		position: relative;
		top: 0;
		min-width: 800px;
		max-width: 800px;
		overflow: hidden;
		/*		
	@media print {
			position: relative;
			top: 0;
			left: -0.75in;
			min-width: 800px;
			max-width: 800px;
			min-height: 9in;
			max-height: 11in;
			} */
		}
	.tableContainerRow {
		width: 650pt;
		}
	#rptTitle {
		display: inline-block;
		width: 765px;
		position: relative;
		top: 0;		
		
		@media print {
			display: none;			
			}
		}
	#rptCtrl {
		display: inline-block;
		width: 765px;
		position: relative;
		top: 0;
		
		@media print {
			display: none;			
			}
		}
	#browserTopImageDiv {
		position: relative;
		top: 0;
		margin-left: 0;
		margin-bottom: 0;
		max-width: 768px;
		max-height: 320px;
		
		@media print {
			/* position: relative; /* vital to print preview in Chrome */
			position:sticky; 
			top: 0.2in;
			margin-left: 0;
			max-width: 768px;
			max-height: 320px;		
			page-break-after: avoid;
			}
		}
	#browserTopImageImg {
		max-width: 100%; /* Ensure the image doesn't exceed the div's width */
		max-height: 100%; /* Ensure the image doesn't exceed the div's height */
		display: block; /* Remove any extra spacing below the image */
		margin: 0 auto; /* Center the image horizontally if necessary */
		
		@media print {
			max-width: 100%; /* Ensure the image doesn't exceed the div's width */
			max-height: 100%; /* Ensure the image doesn't exceed the div's height */
			display: block; /* Remove any extra spacing below the image */
			margin: 0 auto; /* Center the image horizontally if necessary */
			visibility: visible; /* vital to the Chrome print preview */
			}
		}
	#staticHtml {
		position: relative;
		top:0;
		display: table-header-group;
		
		@media print {
			position: sticky;
			top: 0;
			margin-bottom: 0;
			display: table-header-group;  /*  Repeat the header on each page */ 
			width: 100%;
			page-break-before: avoid;
			}
		}
	#tableContainerMain {
		/* max-height: 65%; calc(100vh - 2in); Set the max height to 2 inches less than the viewport height */
		/* overflow-y: auto; Automatically show the scrollbar when content overflows */
		/* min-height: 55% !important;
		max-height: 65% !important;  */
		
		position: relative;
		top: 0;
		
		@media print {
			position: relative;
			top: 0;
			max-height: calc(100vh - 2in); /*  Set the max height to 2 inches less than the viewport height */
			/* margin-bottom: 2in;;
			max-height: auto;
			overflow: hidden;  */
			
			}
		}
	#dynamicHtml {
		position: relative;
		top: 0;
		display: inline-block; /* this is necessary for the scroll bar to appear */
		border-collapse:collapse;
		margin-left:0;
		margin-right:10pt;
		bottom: 0;
		max-height: 50%;
		max-width: 800px; /* Set the table width as needed */
		min-width: 800px; /* Set the table width as needed */
		
		@media print {
			/* Force page break before the table row reaches over two inches from the bottom of the printed page */
			tbody tr {
			  page-break-before: auto;
			  page-break-inside: avoid;
			  page-break-after: auto;
			}
			
			tbody tr:nth-child(16n) {
				page-break-after: always;
				}		
			} 
			
		}
	#dynamichead {
		position: relative;
		top: 0;
		display: inline-block; /* this is necessary for the scroll bar to appear */
		
		border-collapse:collapse;
		margin-left:0pt;
		margin-right: 6pt;
		max-width: 800px; /* Set the table width as needed */
		min-width: 800px; /* Set the table width as needed */
		
		@media print {
			position: relative;
			top: 0;
			left: 0;			
			max-width: 800px; /* Set the table width as needed */
			min-width: 800px; /* Set the table width as needed */
			page-break-before: avoid;
			}
		}
	#browserBottomImageDiv {
		position: relative;
		bottom: 0 !important;
		margin-left: 0;
		width: 768px; /* Set the table width as needed */
		min-height: 320px; /* Set the table width as needed */
		
		@media print {
			position: relative; /* vital to print preview in Chrome */
			top: 0;
			bottom: 0 !important;
			page-break-before: avoid;
			page-break-after: always;
			margin-top: 5px;
			margin-left: 0;
			max-width: 768px;
			max-height: 320px;	
			min-height: 320px;
			} 
		}
	#browserBottomImageImg {
		max-width: 100%; /* Ensure the image doesn't exceed the div's width */
		max-height: 100%; /* Ensure the image doesn't exceed the div's height */
		display: block; /* Remove any extra spacing below the image */
		margin: 0 auto; /* Center the image horizontally if necessary */
		object-fit: cover;
		
		@media print {
			max-width: 100%; /* Ensure the image doesn't exceed the div's width */
			max-height: 100%; /* Ensure the image doesn't exceed the div's height */
			display: block; /* Remove any extra spacing below the image */
			margin: 0 auto; /* Center the image horizontally if necessary */
			visibility: visible; /* vital to the Chrome print preview */
			}
		}
	.divForAnything {
		display: inline-block;
		max-width: 768px;
		}
	.repeat-on-top-of-each-page {
		@media print {
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
		}
	}
	.repeat-on-bottom-of-each-page {
		@media print {
			position: fixed;
			bottom: 0;
			left: 0;
			right: 0;
		}
	}
	@media print {
    /* Apply print-specific styles */
		a::after {
            content: " (" attr(href) ")"; /* Display the href attribute after the link text */
            display: none; /* Hide the actual anchor tag */
			}
		thead, tbody {
			position: relative;
			top: 0;
			display: inline-block;
			}
	}
	/* setting the display property to table-row ensures tr tag behaves like table rows even when dynamically generated. */
	tr {
		display: table-row;
	}
	td {
		display: table-cell;
	}

    </style>
</head>
<body>
	<form id="frmReceivingReport"  onSubmit="javascript:refreshTbl();">
		<div id="tableContainerOuter" class="container break-after">
		    <div id="rptTitle" class="row prctrlhide tableContainerRow">
				  <div class="col-md-3" id='render_buttonPrint'>Place for Button</div>
				  <div class="col-md-9"  id='rrTitle'>Receiving Report Month and Year Choices</div>
		    </div>			
		    <!-- Year, Month, and Vendor Selects -->
		    <div id="rptCtrl" class="row tableContainerRow">
				<div class="col-md-3">
					<div id="render_yearSelect">Default year select</div>
				</div>
				<div class="col-md-3">
					<div id="render_monthSelect">Default month select</div>
				</div>
				<div class="col-md-6 text-right">
					<div id="render_vendorSelect">Default vendor select</div>
				</div>
		    </div>

			<div id="browserTopImageDiv" class="row tableContainerRow avoid-break-after">
				<div class="col-md-12">
					<img id="browserTopImageImg"  style="max-width: 768px;" src="https://nycdsdev1.service-now.com/ac4fb16a1b59b9106c1036ef034bcb46.iix"></img>
				</div>
			</div>
			<div id="browserTopStaticDiv" class="row tableContainerRow  avoid-break">
				<div class="col-md-12">
					<div id="render_staticHtml"  style="max-width: 768px; position:sticky; "></div>
				</div>
			</div>
			<div id="browserTopDynamicHeaderDiv" class="row tableContainerRow  avoid-break">
				<div class="col-md-12">
					<div id="render_dynamicHeader"  style="max-width: 768px; position:sticky; "></div>
				</div>
			</div>
			
			<div id="tableContainerMain" class="row avoid-break">
				<div class="col-md-12">
					<!-- render_table includes thead th and td tbody and tfoot tags -->
						<div id="render_table"></div>
				</div>
			</div>			

			<div id="browserBottomImageDiv" class="row tableContainerRow">
				<div class="col-md-12 avoid-break break-after">
					<img id="browserBottomImageImg" style="max-width: 768px;" src="https://nycdsdev1.service-now.com/537cf5a71b51fd106c1036ef034bcbcf.iix"/>
					<!-- sys_id 537cf5a71b51fd106c1036ef034bcbcf in Attachments table
						style=max width was necessary to have the image appear after the dynamic table
						-->
				</div>
			</div>		
		</div>
	</form>

</body>

</html>
</j:jelly>]]></html>
        <name>ReceivingReportWithBootstrapV05</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>sfarkas</sys_created_by>
        <sys_created_on>2023-10-06 13:08:33</sys_created_on>
        <sys_id>f58ece181b75b590baac766e034bcb61</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>ReceivingReportWithBootstrapV05</sys_name>
        <sys_package display_value="ReceivingReport" source="x_dosny_vendorrepo">bbcb77921bcdf110baac766e034bcb72</sys_package>
        <sys_policy/>
        <sys_scope display_value="ReceivingReport">bbcb77921bcdf110baac766e034bcb72</sys_scope>
        <sys_update_name>sys_ui_page_f58ece181b75b590baac766e034bcb61</sys_update_name>
        <sys_updated_by>sfarkas</sys_updated_by>
        <sys_updated_on>2023-10-06 15:01:55</sys_updated_on>
    </sys_ui_page>
</record_update>
